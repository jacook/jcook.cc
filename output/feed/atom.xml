<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://jcook.cc/</id>
  <title>Jacob Cook</title>
  <updated>2012-12-18T09:00:00Z</updated>
  <link rel="alternate" href="https://jcook.cc/"/>
  <link rel="self" href="https://jcook.cc/feed/atom.xml"/>
  <author>
    <name>Jacob Cook</name>
    <uri>https://jcook.cc</uri>
  </author>
  <entry>
    <id>tag:jcook.cc,2012-12-18:/2012/12/tent-guide-2/</id>
    <title type="html">Tent Guide #2: Using TentStatus as a Client</title>
    <published>2012-12-18T09:00:00Z</published>
    <updated>2012-12-18T09:00:00Z</updated>
    <link rel="alternate" href="https://jcook.cc/2012/12/tent-guide-2/"/>
    <content type="html">&lt;p&gt;Once you have your self-hosted Tent server installed, you will need a way to interact with it – to send and receive messages, to add new followers and to view others’ profiles. The most useful (and universal) client available at this point is called TentStatus. TentStatus was developed by the tent.io team to provide a quick-start way for developers to start using Tent. We will set up an installation of TentStatus on our locally-managed server to provide us with individual access to all things Tent.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;My usual Tent disclaimer: &lt;strong&gt;This guide is NOT foolproof by any means and your results may vary based on architecture or the Git commit you are working from.&lt;/strong&gt; Remember to visit &lt;a href="http://tent.io"&gt;tent.io&lt;/a&gt; or the &lt;a href="https://github.com/tent/tent-status"&gt;GitHub repository&lt;/a&gt; if you have any questions regarding getting your server up and running. As the software is still very experimental, don’t get discouraged if you can’t figure things out on your first go. There are a few resources from other experienced users here and there on the web if your Google-fu is strong enough.&lt;/p&gt;

&lt;h2 id="running-tentstatus-on-a-separate-computer-from-your-tentd-server"&gt;Running TentStatus on a separate computer from your Tentd server&lt;/h2&gt;

&lt;p&gt;If you are running TentStatus on the same computer as your Tentd server, you won’t need to install the packages or reconfigure PostgreSQL, so you can skip down to the “Installing TentStatus” section. If it is a new computer, start right here.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ubuntu Only:&lt;/strong&gt; Make sure the following packages are installed:&lt;/p&gt;

&lt;pre class="highlight"&gt;&lt;code class="language-bash"&gt;sudo apt-get install git ruby1.9.1-full libxml2 libxml2-dev libxslt1-dev build-essential postgresql-server-dev-all
sudo gem install bundler&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Arch Only:&lt;/strong&gt; Install &lt;a href="https://aur.archlinux.org/packages/tent-status-git/"&gt;tent-status-git from the AUR&lt;/a&gt;. It will install to /var/lib/tent-status.
(If you are running Arch, you will need to add “~/.gem/ruby/1.9.1/bin” to your PATH environment variable so you can run the gem binaries.)&lt;/p&gt;

&lt;p&gt;On Arch, we need to initialize the database and start up the PostgreSQL server, since it is not done for us automatically. Run the following commands to do so.&lt;/p&gt;

&lt;pre class="highlight"&gt;&lt;code class="language-bash"&gt;sudo mkdir /var/lib/postgres/data
sudo chown -c postgres:postgres /var/lib/postgres/data
sudo initdb -D &lt;span class="s1"&gt;'/var/lib/postgres/data'&lt;/span&gt;
sudo systemctl start postgresql
sudo systemctl &lt;span class="nb"&gt;enable &lt;/span&gt;postgresql&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Ubuntu and Arch:&lt;/strong&gt; We need to configure PostgreSQL’s default admin user and assign it a password for security purposes.&lt;/p&gt;

&lt;pre class="highlight"&gt;&lt;code class="language-bash"&gt;sudo -u postgres psql postgres
&lt;span class="se"&gt;\p&lt;/span&gt;assword postgres&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It will ask you to set a password. Enter \d to exit this prompt when you are done.&lt;/p&gt;

&lt;p&gt;Now we will create a username and password with which we will access the server’s profile configuration and other tools. It’s often easiest to make the username the same as what your Linux user is on your server. That way you won’t have to change the user via su whenever you need to start up the database.&lt;/p&gt;

&lt;pre class="highlight"&gt;&lt;code class="language-bash"&gt;sudo -u postgres createuser &lt;span class="nv"&gt;$USERNAME&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="installing-tentstatus"&gt;Installing TentStatus&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Ubuntu Only:&lt;/strong&gt; We will use Git to install the newest copy of source available for our server. Go to a location on your drive that you want your server to be based on, and that you have write access to.&lt;/p&gt;

&lt;pre class="highlight"&gt;&lt;code class="language-bash"&gt;git clone https://github.com/tent/tent-status.git tent-status
&lt;span class="nb"&gt;cd &lt;/span&gt;tent-status&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now we will install and compile the various services needed to make TentStatus run.&lt;/p&gt;

&lt;pre class="highlight"&gt;&lt;code class="language-bash"&gt;bundle install&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You may experience some errors here, but usually they are accompanied by enough information to deduce the source of the problem. As of now this process works with current versions of Ubuntu 12.04, as long as you have followed the steps in this order.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ubuntu and Arch:&lt;/strong&gt; Create a new TentStatus database and initialize it.&lt;/p&gt;

&lt;pre class="highlight"&gt;&lt;code class="language-bash"&gt;createdb tent_status&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The following line starts up our TentStatus implementation:&lt;/p&gt;

&lt;pre class="highlight"&gt;&lt;code class="language-bash"&gt;&lt;span class="nv"&gt;DATABASE_URL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;postgres://&lt;span class="nv"&gt;$USERNAME&lt;/span&gt;:&lt;span class="nv"&gt;$PASSWORD&lt;/span&gt;@localhost/tent_status &lt;span class="nv"&gt;APP_NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'TentStatus Standalone'&lt;/span&gt; &lt;span class="nv"&gt;COOKIE_SECRET&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;abc bundle &lt;span class="nb"&gt;exec &lt;/span&gt;puma -p 3001&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once you’ve run the above, you should see a confirmation that your server is listening for requests at http://0.0.0.0:3001. Open up a web browser and enter go to http://localhost:3001. If you are on a remote computer, use the server’s IP address instead of localhost. If you see a “TentStatus Standalone” page asking you for an entity, then your TentStatus implementation is operational. Note that TentStatus operates like a server, so you will need to keep the above line running on your system somehow in order to continuously have the app available. OR you can set up Puma to run in a screen by first exporting the environment variables:&lt;/p&gt;

&lt;pre class="highlight"&gt;&lt;code class="language-bash"&gt;&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;DATABASE_URL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;postgres://&lt;span class="nv"&gt;$USERNAME&lt;/span&gt;:&lt;span class="nv"&gt;$PASSWORD&lt;/span&gt;@localhost/tent_server 
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;ADMIN_USERNAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$USERNAME&lt;/span&gt; 
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;ADMIN_PASSWORD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$PASSWORD&lt;/span&gt;
screen bundle &lt;span class="nb"&gt;exec &lt;/span&gt;puma -p 3000&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src="/img/20121218002.png" alt=""&gt;&lt;/p&gt;

&lt;p&gt;Enter your Tentd server’s URI into the box, then enter the username and password of your server’s database. You will be asked to authorize your connection. Once you do, you will have full access to your Tent server.&lt;/p&gt;

&lt;p&gt;TentStatus functions much like Twitter, and is fairly intuitive if you’ve ever used a social network. It can be used to send short 256-character messages to other users. Mentions come in the form of “^” as opposed to Twitter’s “@”, so if you wish to mention a user, just type ^https://example.com and the post will be forwarded to their Mentions box. Followers can be added via the “Following” button in the dropdown menu of the upper left-hand side. From TentStatus you can also repost other people’s posts that appear in your feed, or you can reply to them just like Twitter’s reply function.&lt;/p&gt;

&lt;p&gt;And just like that, you are using Tent! Give it a “Hello World” and enjoy your hard work.&lt;/p&gt;

&lt;hr&gt;&lt;p&gt;The final guide in this series will explain some of the clients and services that use Tent on various platforms.&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:jcook.cc,2012-12-18:/2012/12/tolerate-facebook/</id>
    <title type="html">Some (Almost) Guilt-Free Ways to Tolerate Facebook</title>
    <published>2012-12-18T07:00:00Z</published>
    <updated>2012-12-18T07:00:00Z</updated>
    <link rel="alternate" href="https://jcook.cc/2012/12/tolerate-facebook/"/>
    <content type="html">&lt;p&gt;The holidays are an interesting time of year. Most of us spend our time with our families, catching up with stories or photos from the year past. Whether we love our families or… just ‘like’ them, Christmas often reminds us that we are stuck with them for life, for better or for worse. This fact is reinforced when we open up our Facebook profiles (for those of us that have them). Facebook has now become a social obligation for many family relationships. But for the privacy-aware user, Facebook is literally the worst-of-the-worst when it comes to tracking, commercialism and most other forms of corporate douchebaggery. The absolute best way is to just get rid of the thing once and for all. But if we can’t get rid of our Facebook accounts due to social obligations, can we at least find a way to ‘tolerate’ it?&lt;/p&gt;

&lt;p&gt;Here I will share how I use and configure my Facebook to be as minimally invasive as possible.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h2 id="use-ghostery-to-block-facebook-trackers"&gt;1. Use Ghostery to Block Facebook Trackers&lt;/h2&gt;

&lt;p&gt;Facebook operates a series of servers that are dedicated to tracking your movements across the web. Almost any site you visit nowadays has a little “Like” button. The “Like” buttons are not simply isolated images like other links on the web, but it is an embedded piece of code that gets executed on Facebook’s servers. This provides Facebook with a detailed image of your browsing history as you move across the Web. Luckily for us, there is a fantastic extension for Firefox and Chrome called Ghostery. Ghostery lets you block not only Facebook trackers, but also a wide variety of tracking cookies and invasive analytic data used by countless other sites and platforms. This will eliminate a lot of Facebook’s spying on your daily web use.&lt;/p&gt;

&lt;p&gt;If you use Firefox, head to its &lt;a href="https://addons.mozilla.org/en-US/firefox/addon/ghostery/"&gt;Firefox Add-ons page&lt;/a&gt;, click “Add to Firefox,” then follow the instructions. If you use Chrome, you can find it on its &lt;a href="https://www.google.ca/url?sa=t&amp;amp;rct=j&amp;amp;q=&amp;amp;esrc=s&amp;amp;source=web&amp;amp;cd=1&amp;amp;cad=rja&amp;amp;ved=0CCwQFjAA&amp;amp;url=https%3A%2F%2Fchrome.google.com%2Fwebstore%2Fdetail%2Fghostery%2Fmlomiejdfkolichcflejclcbmpeaniij%3Fhl%3Den&amp;amp;ei=KKnQUMT5EMfaywHrp4CYBA&amp;amp;usg=AFQjCNFXi-NAcIYeq985_Er7u2QSoFu-uw&amp;amp;bvm=bv.1355534169,d.aWc"&gt;Chrome Web Store page&lt;/a&gt;. Once you have it installed, it will ask you a few questions based on what you will want to use it for. A good practice is to start with checking ALL boxes, which will block most online trackers by default. If you find a functionality you want to use later, you can always temporarily “pause” Ghostery, or you can only allow certain trackers via its search function.&lt;/p&gt;

&lt;h2 id="quit-liking"&gt;2. Quit “Liking”!&lt;/h2&gt;

&lt;p&gt;A big way for Facebook to monetize you and your relationships is by using the pages you “like” in various ways. They can spread this information to any friends (or even friends-of-friends) that you have. Nothing is more embarrassing than your employer seeing that you once liked the “I’d rather have a 40 than a 4.0” group on Facebook. And really, what is the reason for “liking” pages anyway? If we merely want to use Facebook as a way to keep in touch with close friends and family, showing our allegiance to consumer brands or useless platitudes is redundant and a time-waster. Don’t let Facebook and other corporations get rich off your data. Get rid of all your “liked” pages and deny Facebook an important (and invasive) revenue stream.&lt;/p&gt;

&lt;h2 id="manage-your-applications"&gt;3. Manage your Applications&lt;/h2&gt;

&lt;p&gt;Again, if we are only going to use Facebook for personal contact, we have no use for the many applications that can pile up. These applications can have privileges to read our personal information and write on our Facebook walls. The best way to safeguard your privacy with regard to Facebook applications is to simply not use them. Clear out all of your unused Facebook applications, and revoke their access to your account. Use your Facebook page ONLY for communicating with your family and friends via messages or Wall posts. Keep any original content posted to Facebook (like photos via Instagram) to an absolute minimum.&lt;/p&gt;

&lt;h2 id="block-facebook-trackers-at-your-firewall-for-extra-protection"&gt;4. Block Facebook Trackers at Your Firewall (For Extra Protection)&lt;/h2&gt;

&lt;p&gt;If you do not wish to use Ghostery for performance or other reasons, a more efficient way to block only Facebook trackers might be to do so at your firewall. The Facebook trackers have unique IP addresses that can track your outbound requests. These packets can be rejected at the firewall to improve performance and your online privacy.&lt;/p&gt;

&lt;p&gt;If you use a Linux-based firewall, this is easy. UFW:&lt;/p&gt;

&lt;pre class="highlight"&gt;&lt;code class="language-bash"&gt;sudo ufw reject out to 31.13.64.0/18
sudo ufw reject out to 66.220.144.0/20
sudo ufw reject out to 69.171.224.0/19
sudo ufw reject out to 69.63.176.0/20&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;or for Iptables:&lt;/p&gt;

&lt;pre class="highlight"&gt;&lt;code class="language-bash"&gt;sudo iptables -A OUTPUT -d 31.13.64.0/18 -j REJECT
sudo iptables -A OUTPUT -d 66.220.144.0/20 -j REJECT
sudo iptables -A OUTPUT -d 69.171.224.0/19 -j REJECT
sudo iptables -A OUTPUT -d 69.63.176.0/20 -j REJECT&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The downside to this method is that it is not as frequently updated as Ghostery. While Ghostery has a databse full of information that is relatively up-to-date, the IP addresses that Facebook use for tracking may be changed over time, requiring you to keep an eye on your settings and to consult the Internet regularly. If you need to update the trackers, you can see all Facebook’s registered IP ranges by running:&lt;/p&gt;

&lt;pre class="highlight"&gt;&lt;code class="language-bash"&gt;whois -h whois.radb.net &lt;span class="s1"&gt;'!gAS32934'&lt;/span&gt; | tr &lt;span class="s1"&gt;' '&lt;/span&gt; &lt;span class="s1"&gt;'\n'&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then try to visit a site that you know uses Facebook buttons or trackers. Check your firewall logs from this period for any of the IP addresses that come up with the above command, then add those IP ranges to your blocker. It takes a bit of work to do this, but depending on your configuration (like efficient blocking for an entire network), it may be worth it in the end.&lt;/p&gt;

&lt;h2 id="keep-privacy-settings-up-to-date"&gt;5. Keep Privacy Settings Up-to-date&lt;/h2&gt;

&lt;p&gt;This should be an obvious one, but make sure your Privacy settings in Facebook are as restrictive as they can be. Facebook frequently changes the way they organize and display Privacy settings, so check back here every few months to make sure everything is just how you want it.&lt;/p&gt;

&lt;p&gt;And last, but not least:&lt;/p&gt;

&lt;h2 id="encourage-your-family-and-friends-to-head-elsewhere"&gt;6. Encourage your Family and Friends to Head Elsewhere&lt;/h2&gt;

&lt;p&gt;Yes, yes, I know – pulling a bull’s teeth would be easier. But there are many social networks that are not as invasive and downright terrible as Facebook. Clearly and calmly explain your privacy concerns to your family, and explain why they should also be concerned. Offer to help them transition to new social networks that respect user privacy and ownership rights.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://identi.ca"&gt;Identi.ca&lt;/a&gt; is a good alternative for sharing short messages, like on Twitter. &lt;a href="https://joindiaspora.com"&gt;Diaspora&lt;/a&gt; is good for more Facebook-like features. The up-and-coming &lt;a href="http://tent.io"&gt;Tent&lt;/a&gt; platform will also become more and more viable in the coming months. As I’ve repeated before: the best way to tolerate Facebook is to not use it at all.&lt;/p&gt;

&lt;hr&gt;&lt;p&gt;Hopefully at this point we can use Facebook with at least a little more peace-of-mind. &lt;strong&gt;These tips cannot resolve every problem Facebook has: it still can profit off the personal information and photos you deliver to it.&lt;/strong&gt; It may still be a painful experience, but as long as we are stuck with Facebook, we can ensure that it isn’t stuck with us!&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:jcook.cc,2012-12-09:/2012/12/tent-guide-1/</id>
    <title type="html">Tent Guide #1: Setting Up a Tent Server</title>
    <published>2012-12-09T12:00:00Z</published>
    <updated>2012-12-09T12:00:00Z</updated>
    <link rel="alternate" href="https://jcook.cc/2012/12/tent-guide-1/"/>
    <content type="html">&lt;p&gt;This guide will detail how to set up and run your very own Tent v0.2 server on your own hardware. It will cover the proper installation and configuration on either Ubuntu Server 12.04 or an updated copy of Arch Linux. A follow-up post will detail how to use the TentStatus client (or other clients) to interact with your Tent server.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;&lt;strong&gt;This guide is NOT foolproof by any means and your results may vary based on architecture or the Git commit you are working from.&lt;/strong&gt; Remember to visit &lt;a href="http://tent.io"&gt;tent.io&lt;/a&gt; or the &lt;a href="https://github.com/tent/tentd-admin"&gt;GitHub repository&lt;/a&gt; if you have any questions regarding getting your server up and running. As the software is still very experimental, don’t get discouraged if you can’t figure things out on your first go. There are a few resources from other experienced users here and there on the web if your Google-fu is strong enough. Also, make sure you replace &lt;code&gt;$USERNAME&lt;/code&gt;, &lt;code&gt;$PASSWORD&lt;/code&gt;, and &lt;code&gt;mydomain.com&lt;/code&gt; with the appropriate values where they come up.&lt;/p&gt;

&lt;h2 id="install-packages"&gt;Install Packages&lt;/h2&gt;

&lt;p&gt;First things first, you’ll want to make sure the following packages are installed:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Arch:&lt;/strong&gt; Install &lt;a href="https://aur.archlinux.org/packages/tentd-admin-git/"&gt;tentd-admin from the AUR&lt;/a&gt;. It will automatically clone and install the Git repository at &lt;code&gt;/var/lib/tentd-admin&lt;/code&gt;.
(If you are running Arch, you will need to add &lt;code&gt;~/.gem/ruby/1.9.1/bin&lt;/code&gt; to your &lt;code&gt;PATH&lt;/code&gt; environment variable so you can run the gem binaries.)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ubuntu:&lt;/strong&gt;&lt;/p&gt;

&lt;pre class="highlight"&gt;&lt;code class="language-bash"&gt;sudo apt-get install git ruby1.9.1-full libxml2 libxml2-dev libxslt1-dev build-essential postgresql postgresql-server-dev-all postgresql-client nodejs
sudo gem install bundler
sudo gem install rake&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="setting-up-the-postgresql-database"&gt;Setting Up the PostgreSQL Database&lt;/h2&gt;

&lt;p&gt;Tent uses a PostgreSQL database to store statuses and content. We will add a PostgreSQL database and configure it to accept connections from our Tent server.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Arch Only:&lt;/strong&gt; First we need to initialize the database and start up the PostgreSQL server, since it is not done for us automatically. Run the following commands to do so.&lt;/p&gt;

&lt;pre class="highlight"&gt;&lt;code class="language-bash"&gt;sudo mkdir /var/lib/postgres/data
sudo chown -c postgres:postgres /var/lib/postgres/data
sudo initdb -D &lt;span class="s1"&gt;'/var/lib/postgres/data'&lt;/span&gt;
sudo systemctl start postgresql
sudo systemctl &lt;span class="nb"&gt;enable &lt;/span&gt;postgresql&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Arch and Ubuntu&lt;/strong&gt;: We need to configure PostgreSQL’s default admin user and assign it a password for security purposes.&lt;/p&gt;

&lt;pre class="highlight"&gt;&lt;code class="language-bash"&gt;sudo -u postgres psql postgres
&lt;span class="se"&gt;\p&lt;/span&gt;assword postgres&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It will ask you to set a password. Enter \d to exit this prompt when you are done.&lt;/p&gt;

&lt;p&gt;Now we will create a username and password with which we will access the server’s profile configuration and other tools. This username and password will need to be entered every time you want to pair a new client application with Tent. It’s often easiest to make the username the same as what your Linux user is on your server. That way you won’t have to change the user via su whenever you need to directly access the database or change its contents.&lt;/p&gt;

&lt;pre class="highlight"&gt;&lt;code class="language-bash"&gt;sudo -u postgres createuser &lt;span class="nv"&gt;$USERNAME&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Next, create a new Tent database and initialize it.&lt;/p&gt;

&lt;pre class="highlight"&gt;&lt;code class="language-bash"&gt;createdb tent_server&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Log into PostgreSQL and set the password you want to use when connecting to your database. If your database username created above doesn’t match that of your Linux user, you’ll need to add “sudo -u $USERNAME” in front of this command.&lt;/p&gt;

&lt;pre class="highlight"&gt;&lt;code class="language-bash"&gt;psql tent_server
&lt;span class="nv"&gt;tent_server_test&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; ALTER ROLE &lt;span class="nv"&gt;$USERNAME&lt;/span&gt; ENCRYPTED PASSWORD &lt;span class="s1"&gt;'$PASSWORD'&lt;/span&gt;;
&lt;span class="nv"&gt;tent_server_test&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="se"&gt;\q&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="fetching-and-installing-the-tent-source"&gt;Fetching and Installing the Tent Source&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Ubuntu Only:&lt;/strong&gt; We will use Git to install the newest copy of source available for our server. Go to a location on your drive that you want your server to be based on, and that you have write access to.&lt;/p&gt;

&lt;pre class="highlight"&gt;&lt;code class="language-bash"&gt;git clone https://github.com/tent/tentd-admin.git tentd-admin
&lt;span class="nb"&gt;cd &lt;/span&gt;tentd-admin&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now we will install and compile the various services needed to make the Tent server run.&lt;/p&gt;

&lt;pre class="highlight"&gt;&lt;code class="language-bash"&gt;bundle install&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You may experience some errors here, but usually they are accompanied by enough information to deduce the source of the problem. As of now this process works with current versions of Ubuntu 12.04, as long as you have followed the steps in this order.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Arch and Ubuntu&lt;/strong&gt;: CD to your install directory, then initialize the database:&lt;/p&gt;

&lt;pre class="highlight"&gt;&lt;code class="language-bash"&gt;&lt;span class="nv"&gt;DATABASE_URL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;postgres://&lt;span class="nv"&gt;$USERNAME&lt;/span&gt;:&lt;span class="nv"&gt;$PASSWORD&lt;/span&gt;@localhost/tent_server bundle &lt;span class="nb"&gt;exec &lt;/span&gt;rake db:migrate&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now we will utter the magic words that bring our server to life (make sure it’s all on one line):&lt;/p&gt;

&lt;pre class="highlight"&gt;&lt;code class="language-bash"&gt;&lt;span class="nv"&gt;DATABASE_URL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;postgres://&lt;span class="nv"&gt;$USERNAME&lt;/span&gt;:&lt;span class="nv"&gt;$PASSWORD&lt;/span&gt;@localhost/tent_server &lt;span class="nv"&gt;ADMIN_USERNAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$USERNAME&lt;/span&gt; &lt;span class="nv"&gt;ADMIN_PASSWORD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$PASSWORD&lt;/span&gt; bundle &lt;span class="nb"&gt;exec &lt;/span&gt;puma -p 3000&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once you’ve run the above, you should see a confirmation that your server is listening for requests at http://0.0.0.0:3000. Open up a web browser and enter go to http://localhost:3000. If you are on a remote computer, use the server’s IP address instead of localhost. If you see “Tent!” then your server is operational.&lt;/p&gt;

&lt;p&gt;To set up a quick profile, browse to http://localhost:3000/admin. It will prompt you for the database username and password that we set up earlier. If a screen of checkboxes comes up, click Grant Access to proceed. You will then be greeted with a series of fields that you can fill in to change your name, location, birthdate and other profile-like information.&lt;/p&gt;

&lt;p&gt;&lt;img src="/img/20121209001.png" alt=""&gt;&lt;/p&gt;

&lt;p&gt;Congrats, your server is working!&lt;/p&gt;

&lt;p&gt;You will notice that your server suddenly &lt;strong&gt;stops&lt;/strong&gt; working if you cancel the Puma command or exit your server’s SSH session (provided that’s how you’re accessing your server). BUT you can run Puma under Screen if you first export your environment variables.&lt;/p&gt;

&lt;pre class="highlight"&gt;&lt;code class="language-bash"&gt;&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;DATABASE_URL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;postgres://&lt;span class="nv"&gt;$USERNAME&lt;/span&gt;:&lt;span class="nv"&gt;$PASSWORD&lt;/span&gt;@localhost/tent_server 
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;ADMIN_USERNAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$USERNAME&lt;/span&gt; 
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;ADMIN_PASSWORD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$PASSWORD&lt;/span&gt;
screen bundle &lt;span class="nb"&gt;exec &lt;/span&gt;puma -p 3000&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="separate-entity-and-server-address-under-apache"&gt;Separate Entity and Server Address under Apache&lt;/h2&gt;

&lt;p&gt;In some cases it may be useful to set up your entity as being a different address than your server. For example, if you would like your Tent entity (handle) to be https://mydomain.com, but you also want your website to be served by this address. So your server would need to be positioned on something like https://tent.mydomain.com. This can be accomplished by adding the following lines into your Apache VirtualHost file(s) for your main page at mydomain.com: &lt;/p&gt;

&lt;pre class="highlight"&gt;&lt;code class="language-bash"&gt;Header &lt;span class="nb"&gt;set &lt;/span&gt;Link &lt;span class="s1"&gt;'&amp;lt;https://tent.mydomain.com/profile&amp;gt;; rel="https://tent.io/rels/profile"'&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Make sure the Apache mods “headers” and “proxy” are enabled. You will also need to add the &lt;code&gt;TENT_ENTITY&lt;/code&gt; environment variable to your Puma command, and it should match your desired entity address. You should probably do this before you do anything with your account, like posting or following, as it may create conflicting messages in your followers’ streams with two different entities. Reload your Apache configuration and make sure your profile settings are properly set to use the right entity/server addresses, and you’re set!&lt;/p&gt;

&lt;hr&gt;&lt;p&gt;The next guide in this series will explain how to use TentStatus with your new Tent server. Stay tuned!&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:jcook.cc,2012-12-09:/2012/12/tent/</id>
    <title type="html">Tent: Take Back Your Social Network</title>
    <published>2012-12-09T08:00:00Z</published>
    <updated>2012-12-09T08:00:00Z</updated>
    <link rel="alternate" href="https://jcook.cc/2012/12/tent/"/>
    <content type="html">&lt;p&gt;Over the past few days I’ve been getting to know &lt;a href="http://tent.io"&gt;the Tent project&lt;/a&gt;. Tent is a protocol for sharing and storing data that has the potential to change the way we think about how social networks are presently organized and integrated. The present system of centralized control and access does a tremendous disservice to users, as I’ve articulated many times, and can actually be dangerous for those who use social networks for sensitive or political communication. So creating a truly decentralized yet truly interoperable social sharing system is key to addressing the biggest problems that face social networking today.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;Some things that differentiate Tent from other social networks, like Facebook or Twitter:&lt;/p&gt;

&lt;p&gt;Tent is &lt;strong&gt;decentralized&lt;/strong&gt;. Facebook and Twitter house all of their users data in the same system. More importantly, Facebook and Twitter have access to all of your data at any given time. This gives them the right to compel you into their Terms of Service, which means that you are forced to agree to a whole set of things you might not like just because you want to keep in contact with your friends and family. Tent solves this by giving individual users and groups the capability to organize their own servers that can then be operated on their own terms. This is a great feature for those who are concerned with who might have legal access or rights to their data. Another benefit of decentralization lies in its resilience to external interference. If a government decides to shut off access to certain Tent servers, or if those servers are knocked offline due to technical problems, all other servers can remain active and communicate as normal. The same is not true of centralized services like Twitter which can be disrupted and interrupt communication between all of its users at once. In order to stop communication on Tent, every Tent server in the world would need to be disrupted.&lt;/p&gt;

&lt;p&gt;Tent is &lt;strong&gt;interoperable&lt;/strong&gt;. Being a protocol rather than a fixed system, Tent users communicate with each other via a disparate linking of intercommunicating servers. While two or three of your friends might run their own Tent servers, and four or five other friends might have their accounts on Tent.is (a public Tent hosting service), they will all be able to communicate in the same way with each other. The traffic simply passes over the Internet between Tent servers, instead of stuck in a closed platform.&lt;/p&gt;

&lt;p&gt;Tent is a &lt;strong&gt;protocol&lt;/strong&gt;. A protocol is simply a method for transmitting information, like HTTP over the Internet. Because Tent is a protocol instead of a fixed service, it allows anyone to create applications and servers that can communicate with it. Presently if you share information on Facebook, only your Facebook friends can experience them there, and your Twitter/LinkedIn/whatever other networks are left out. You could always post to multiple sources, but with each share you lose part of the experience that each platform is built to serve. Tent changes this by allowing any user running a Tent-compatible program can see what you share, regardless of what service you use to host your data.&lt;/p&gt;

&lt;p&gt;And finally, Tent is &lt;strong&gt;100% user-driven&lt;/strong&gt;. Like mentioned above, it is decentralized and self-managed so the data always remains under your control. But say someday you are done with hosting your server yourself, and want your Tent data to go to another server? You will be able to transfer your data and even your Tent handle easily and effortlessly. You will never need to go through the hassle of asking all your friends to change your address in their computers, or to explain to your friends who only use Facebook/Twitter for example why you are moving elsewhere.&lt;/p&gt;

&lt;p&gt;&lt;img src="/img/20121209002.png" alt="A screenshot of the Zelten client reading the data from a Tent server. This client has a Twitter-esque feel, but any application can render the same data in the way it sees fit."&gt;
(A screenshot of the Zelten client reading the data from a Tent server. This client has a Twitter-esque feel, but any application can render the same data in the way it sees fit.)&lt;/p&gt;

&lt;p&gt;Tent operates in a client-server model. In order to have an account and store your data, you must run a server implementation that can communicate using Tent. This is much like how webservers work: when they receive requests from clients, they serve up the data they have stored for users’ browsing. When you connect a Tent client to your Tent server, you can then view and modify your information as well as get caught up on what your followers are up to. You can run Tent clients on a variety of platforms to access the same information, which is stored wherever you choose to locate your Tent entity, whether it be your own server or that of a public service provider.&lt;/p&gt;

&lt;p&gt;It should be mentioned that quite a few features are planned for Tent but have not yet come to fruition. It is still very early in its development and is very buggy. Therefore it’s not quite ready for general use yet, but it’s coming along very nicely on sites like &lt;a href="http://tent.is"&gt;Tent.is&lt;/a&gt;. There are many applications in development for posting and interacting with your Tent data on various platforms. I think Tent has a very promising and competitive future once its server specification gets fleshed out and secured a bit further.&lt;/p&gt;

&lt;p&gt;Soon I will put up a post explaining how to set up an experimental Tent server and to use it to share and store your data.&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:jcook.cc,2012-12-06:/2012/12/cypherpunks/</id>
    <title type="html">What I've Read: Cypherpunks</title>
    <published>2012-12-06T12:00:00Z</published>
    <updated>2012-12-06T12:00:00Z</updated>
    <link rel="alternate" href="https://jcook.cc/2012/12/cypherpunks/"/>
    <content type="html">&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Authors:&lt;/strong&gt; Julian Assange, Jacob Appelbaum, Andy Müller-Maguhn, and Jérémie Zimmerman&lt;/li&gt;
  &lt;li&gt;
&lt;strong&gt;Language:&lt;/strong&gt; English&lt;/li&gt;
  &lt;li&gt;
&lt;strong&gt;Genre(s):&lt;/strong&gt; Non-Fiction; Technology (Cryptography, Freedom, Security), Communications, Philosophy&lt;/li&gt;
  &lt;li&gt;
&lt;strong&gt;Date of Publication:&lt;/strong&gt; 2012&lt;/li&gt;
&lt;/ul&gt;&lt;!-- more --&gt;&lt;p&gt;&lt;strong&gt;About the Book (Excerpt):&lt;/strong&gt; &lt;em&gt;“Cypherpunks are activists who advocate the widespread use of strong cryptography (writing in code) as a route to progressive change. Julian Assange, the editor-in-chief of and visionary behind WikiLeaks, has been a leading voice in the cypherpunk movement since its inception in the 1980s. Now, in what is sure to be a wave-making new book, Assange brings together a small group of cutting-edge thinkers and activists from the front line of the battle for cyber-space to discuss whether electronic communications will emancipate or enslave us. Among the topics addressed are: Do Facebook and Google constitute “the greatest surveillance machine that ever existed,” perpetually tracking our location, our contacts and our lives? Far from being victims of that surveillance, are most of us willing collaborators? Are there legitimate forms of surveillance, for instance in relation to the “Four Horsemen of the Infopocalypse” (money laundering, drugs, terrorism and pornography)? And do we have the ability, through conscious action and technological savvy, to resist this tide and secure a world where freedom is something which the Internet helps bring about?”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;My review:&lt;/strong&gt; I eagerly anticipated the release of this book. The chance to be a “fly on the wall” during a conversation of four of the world’s most influential “hackers” and internet activists doesn’t happen everyday. And that is exactly what we are presented with in &lt;em&gt;Cypherpunks.&lt;/em&gt; The book plays out in conversation format, with Julian Assange, Jacob Appelbaum, Andy Müller-Maguhn and Jérémie Zimmerman discussing their own points of view regarding the state of the Internet and the role of government in today’s always-connected society. They each bring their own interesting perspective to the table during the discussion. Reoccurring themes in the book include the encroaching and totalizing force of social networking, the extent of government surveillance programs, and (of course) the threat that organizations like WikiLeaks pose for those in power.&lt;/p&gt;

&lt;p&gt;This book presents us with a “crossroads moment” in the advancement of our technology. The concentration of vast amounts of information by unaccountable corporations like Google and Facebook pose a danger in themselves. However the book highlights the very real problem of “bulk interception” – governments capturing &lt;em&gt;all&lt;/em&gt; data communicated on certain channels and storing it for later use. The capability for bulk interception is very new, and coupled with the fact that we are sharing more information more publicly than ever, there is tremendous cause for concern that common individuals might be targeted for nothing more than using their right to free speech (&lt;em&gt;“Ten years ago this was seen to be a fantasy, this was seen to be something only paranoid people believed in, but the costs of mass interception have now decreased to the point where even a country like Libya with relatively few resources was doing it with French technology”&lt;/em&gt;). Furthermore, many communications systems and social networking platforms are based in the United States, they are subject to the United States government law, and ultimately, its physical control. Laws governing the privacy of this information are loose and often simply ignored. Free communication and the exchange of political ideas online are also at risk from the resulting effects of censorship (&lt;em&gt;“They see the internet like an illness that affects their ability to define reality”&lt;/em&gt;). Other important implications are studied, such as the risks posed to freedom of association and economic exchange.&lt;/p&gt;

&lt;p&gt;I am very pleased to say that this book does not fall into the trap that so many “cypherpunks” and internet activists have fallen into before it: the libertarian fantasy. The never-ending dream within the tech community often focuses on the state as the sole enemy, and tells us that “If only we had a _truly _free market, the consumer would rule, and we would never have any problems with surveillance/privacy/etc.” This hogwash is largely avoided in this book. The merger of state and corporate power is given serious treatment, and the authors pull no punches when it comes to the role that unmitigated capitalism and economic exploitation play in the systematic infringement of rights. While the phrase “free market” is tossed around quite a bit – almost uncomfortably so – the authors make it clear that the “economic freedoms” they emphasize are not predicated on vertically-organized hierarchies of exploitation.&lt;/p&gt;

&lt;p&gt;The four authors do an excellent job of exposing the present architecture of the Internet and modern communications, and demonstrating why every individual should be involved in changing it. Aside from the introduction, the book is not written in a polemic style, and it benefits from the clear and level-headed way in which the authors outline just what is at stake. But at the end of the book we are left with a bit of a black hole. Julian’s powerful statement in the introduction (&lt;em&gt;“Cryptography is the ultimate form of non-violent direct action”&lt;/em&gt;) implies that we merely need to encrypt all of our information everywhere and that will somehow make the surveillance state stop trying… or something. I would like to have read more details about the potential alternatives to the present system. The book is short on specifics for actually encouraging change, both within the “hacker” and tech enthusiast community, and outside of it. There are mentions of some possible actions, like working for more decentralized Internet architectures, however this book is more focused on large-scale demonstrations of “where we are now” rather than how we can get to where we need to be.&lt;/p&gt;

&lt;p&gt;That being said, I found &lt;em&gt;Cypherpunks&lt;/em&gt; to be a very enjoyable and enlightening read. Even though I do not consider myself a layman in the subjects the book presents, I learned quite a bit by reading it. Most of the book is presented in a way that is easy to read and understand, naming and explaining all the acronyms and references that come up for those who may not be as well-versed in the subject matter. I would recommend &lt;em&gt;Cypherpunks&lt;/em&gt; to any political or tech activist interested in learning what the new wave of communications – both for better and for worse – could look like.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;My rating:&lt;/strong&gt; ★★★★&lt;/p&gt;

&lt;hr&gt;&lt;p&gt;&lt;strong&gt;Notable Quotes&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Jérémie Zimmerman on the “dumbing down” of technology:&lt;/strong&gt; “&lt;em&gt;I see a difference with what we describe as the spreading of technology, because in the case of the mill and the printing press you had to look at one to understand how it works, whereas now we are increasingly building control inside the technology. The control is built-in. If you look at a modern computer in most cases you cannot even open it to get to know all the components. And all the components are in small cases—you cannot know what they are doing… [Free software/hardware] can contain the function to monitor the user and its data. This is why free software is so important for a free society.&lt;/em&gt;”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Jacob Appelbaum on oversharing with Facebook:&lt;/strong&gt; &lt;em&gt;“It’s absolute madness to imagine that we give up all of our personal data to these companies, and then the companies have essentially become privatized secret police. And—in the case of Facebook—we even have democratized surveillance. Instead of paying people off the way the Stasi did in East Germany, we reward them as a culture—they get laid now. They report on their friends and then, ‘Hey, so and so got engaged;’ ‘Oh, so and so broke up;’ ‘Oh, I know who to call now.’“&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Julian Assange on why leaving privacy issues to politicians isn’t the only solution:&lt;/strong&gt; “&lt;em&gt;You can have your democratic victories that take place in public, on the surface, but underneath things are still done anyway. Which is to show that I don’t think that policy or legislative reform is the way; although you can’t give the opponent a free kick either, because then they just accelerate. So it is important to check them in various ways, as ACTA is being checked. It slows them down. But even a win in parliament in relation to legislation doesn’t stop this below the surface activity.&lt;/em&gt;”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Jacob Appelbaum on the morals of social networks:&lt;/strong&gt; &lt;em&gt;“This isn’t about technology at all, it’s about economics. They have decided that it is more important to collaborate with the state and to sell out their users and to violate their privacy and to be a part of the system of control—to be paid back for being a part of the surveillance culture, to be part of the culture of control—than to be resistant to it, and so they become a part of it. They’re complicit and liable.”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Andy Müller-Maguhn on the endgame:&lt;/strong&gt; “&lt;em&gt;We have to stick to our own infrastructure, that’s the important thing to learn here—that if we want to oppose the surveillance state, the one Big Brother, we have to study what that is, whether it is indeed a linking of central states that say, “Hey, if we combine we can gain even more.” And we need to know what our role is here—our role is to keep decentralized, have our own infrastructure, not rely on cloud computing and other bullshit, but have our own thing.&lt;/em&gt;”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;And finally, Jacob Appelbaum on the benefit that cryptographic security can provide for free speech:&lt;/strong&gt; “&lt;em&gt;The force of nearly all modern authority is derived from violence or the threat of violence. One must acknowledge with cryptography no amount of violence will ever solve a math problem.&lt;/em&gt;”&lt;/p&gt;</content>
  </entry>
</feed>

